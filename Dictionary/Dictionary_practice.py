# 집합을 이용한 정수의 제곱 표시
# 키보드로부터 숫자를 입력받고 정수로 변환한 후 저장
n = int(input("숫자(정수) 입력: "))
# 딕셔너리 생성 dict() 이라고 쳐야한다
d = dict()

# 1부터 키보드로부터 입력된 숫자까지 for문 실행
for x in range(1, n+1):
    d[x] = x**2

print("사전(Dictionary) d= ", d)
##################################################################
# 모스 부호 따오기 (인터넷 검색 요망)
dic = {'.-': 'A', '-...': 'B', '-.-.': 'C', '-..': 'D', '.': 'E', '-.': 'F', '--.': 'G', '....': 'H', '..': 'I', '---': 'J', '-.-': 'K', '.-..': 'L', '--': 'M', '-.': 'N', '---': 'O', '.--.': 'P', '--.-': 'Q', '.-.': 'R', '...': 'S', '-': 'T', '..-': 'U', '...-': 'V', '.--': 'W', '-..-': 'X', '-.--': 'Y', '--..': 'Z', ',': ' '}


# 모스 부호를 위한 함수 정의
def morse(src):
    # 모스 부호의 의미를 저장하기 위한 변수 생성
    result = []
    # 입력된 모스 부호에서 공백으로 분리한 모스 부호들을 사용하여 for문 실행
    for word in src.split(" "):
        # 모스 부호를 사전에서 찾아 변수(result)에 추가
        result.append(dic[word])
#        result.append(" ")		# 변수(result)에 공백추가
    return "".join(result)		# 모스 부호들의 의미를 결합


print(morse(".. , .-.. --- ...- . , .--. -.-- - .... --- -."))
#############################################################################
# 로마 문자를 숫자로 변환하여 출력하는 프로그램
def roman_to_int(s):
    # 로마문자와 정수와의 관계를 사전으로 정의
    rom_val = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
    # 정수 값을 저장할 변수 생성 및 초기 값
    int_val = 0
    # 입력한 로마문자 범위 내에서 for문 실행
    for i in range(len(s)):
        # 만약 현재 로마문자에 해당하는 숫자가 이전로마
        # 문자에 해당하는 숫자보다 값이 크면
        if i > 0 and rom_val[s[i]] > rom_val[s[i-1]]:
            int_val += rom_val[s[i]] - 2*rom_val[s[i-1]]

        # 만약 현재 로마문자에 해당하는 숫자가 이전 로마
        # 문자에 해당하는 숫자보다 값이 크지 않으면
        else:
            int_val += rom_val[s[i]]
    return int_val


print(roman_to_int('CVI'))

